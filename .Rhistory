# Install and load the required packages
# devtools::install_github("synth-inference/synthdid")
library(synthdid)
devtools::install_github("synth-inference/synthdid")
# Install and load the required packages
# devtools::install_github("synth-inference/synthdid")
library(synthdid)
library(ggplot2)
library(fixest) # Fixed-effects regression
install.packages('fixest')
# Install and load the required packages
# devtools::install_github("synth-inference/synthdid")
library(synthdid)
library(ggplot2)
library(fixest) # Fixed-effects regression
library(data.table)
# Install and load the required packages
# devtools::install_github("synth-inference/synthdid")
library(synthdid)
library(ggplot2)
library(fixest) # Fixed-effects regression
library(data.table)
# Set seed for reproducibility
set.seed(12345)
source('sim_data.R') # Import simulation function and some utilities
dt <- sim_data()
head(dt)
View(dt)
# Convert the data into a matrix
setup = panel.matrices(dt, unit = 'country', time = 'period',
outcome = 'revenue', treatment = 'treat')
# Estimate treatment effect using SynthDiD
tau.hat = synthdid_estimate(Y = setup$Y,
NO = setup$N0,
TO = setup$T0)
# Convert the data into a matrix
setup = panel.matrices(dt, unit = 'country', time = 'period',
outcome = 'revenue', treatment = 'treat')
# Estimate treatment effect using SynthDiD
tau.hat = synthdid_estimate(setup$Y,
setup$N0,
setup$T0)
print(summary(tau.hat))
View(setup)
setup$N0
setup[["W"]]
View(setup)
View(setup)
View(dt)
View(dt)
View(dt)
# Convert the data into a matrix
setup = panel.matrices(dt, unit = 'country', time = 'period',
outcome = 'revenue', treatment = 'treat')
# Estimate treatment effect using SynthDiD
tau.hat = synthdid_estimate(setup$Y,
setup$N0,
setup$T0)
print(summary(tau.hat))
# Calculate standard errors
se = sqrt(vcov(tau.hat, method='jackknife'))
te_est <- sprintf('Point estimate for the treatment effect: %1.2f', tau.hat)
CI <- sprintf('95%% CI (%1.2f, %1.2f)', tau.hat - 1.96 * se, tau.hat + 1.96 * se)
# Plot treatment effect estimates
plot(tau.hat)
plot(tau.hat, se.method='jackknife')
# Check the number of treatment and control countries to report
num_treated <- length(unique(dt[treat==1]$country))
num_control <- length(unique(dt$country))-num_treated
# Create spaghetti plot with top 10 control units
top.controls = synthdid_controls(tau.hat)[1:10, , drop=FALSE]
plot(tau.hat, spaghetti.units=rownames(top.controls),
trajectory.linetype = 1, line.width=.75,
trajectory.alpha=.9, effect.alpha=.9,
diagram.alpha=1, onset.alpha=.9, ci.alpha = .3, spaghetti.line.alpha =.2,
spaghetti.label.alpha = .1, overlay = 1) +
labs(x = 'Period', y = 'Revenue', title = 'Estimation Results',
subtitle = paste0(te_est, ', ', CI, '.'),
caption = paste0('The number of treatment and control units: ', num_treated, ' and ', num_control, '.'))
# Plot control unit contributions
synthdid_units_plot(tau.hat, se.method='jackknife') +
labs(x = 'Country', y = 'Treatment effect',
caption = 'The black horizontal line shows the actual effect;
the gray ones show the endpoints of a 95% confidence interval.')
ggsave('../figures/unit_weights.png')
# Check for pre-treatment parallel trends
plot(tau.hat, overlay=1, se.method='jackknife')
ggsave('../figures/results_simple.png')
# Check the number of treatment and control countries to report
num_treated <- length(unique(dt[treat==1]$country))
num_control <- length(unique(dt$country))-num_treated
# Check the number of treatment and control countries to report
num_treated <- length(unique(dt[treat==1]$country))
num_control <- length(unique(dt$country))-num_treated
# Create spaghetti plot with top 10 control units
top.controls = synthdid_controls(tau.hat)[1:10, , drop=FALSE]
plot(tau.hat, spaghetti.units=rownames(top.controls),
trajectory.linetype = 1, line.width=.75,
trajectory.alpha=.9, effect.alpha=.9,
diagram.alpha=1, onset.alpha=.9, ci.alpha = .3, spaghetti.line.alpha	=.2,
spaghetti.label.alpha = .1, overlay = 1) +
labs(x = 'Period', y = 'Revenue', title = 'Estimation Results',
subtitle = paste0(te_est, ', ', CI, '.'),
caption = paste0('The number of treatment and control units: ', num_treated, ' and ', num_control, '.'))
ggsave('../figures/results.png')
fe <- feols(revenue~treat, dt, cluster = 'country', panel.id = 'country',
fixef = c('country', 'period'))
summary(fe)
getwd()
